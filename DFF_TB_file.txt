library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_textio.all;

library std;
use std.textio.all;


entity DFF_TB is
--  Port ( );
end DFF_TB;

architecture Behavioral of DFF_TB is
component D_FF is
    Port ( D : in STD_LOGIC;
           CLK : in STD_LOGIC;
           Q : out STD_LOGIC;
           nQ : out STD_LOGIC);
end component D_FF;

signal D_tb , clk_tb , q_tb , nq_tb : std_logic;

file FOUT : text ;
begin

DUT : D_ff port map ( d => d_tb , clk => clk_tb , q => q_tb , nq => nq_tb);


stim: process

variable current_line : line;

begin 
    file_open(FOUT , "output.txt" , write_mode);
    write(current_line , string'("INPUT = D , OUTPUT = Q"));    -- The write function writes the text into current_line Variable;
    
         --writeline function writes the current_line variable into the text file.
    D_tb <= '1' ; wait for 10ns;
    write(current_line , string'("D = "));
    write(current_line , D_tb);
    write(current_line , string'("Q = "));
    write(current_line, Q_tb);
   
    -- OUTPUT in the text file should be like this 
    -- D = 1  Q = 1
    D_tb <= '0' ; wait for 10ns;
    write(current_line , string'("D = "));
    write(current_line , D_tb);
    write(current_line , string'("Q = "));
    write(current_line, Q_tb);
  
    -- OUTPUT in the text file should be like this 
    -- D = 0  Q = 1
    file_close(Fout);
end process stim;

clk_process : process 
begin 
clk_tb <= '0' ; wait for 10ns;
clk_tb <= '1' ; wait for 10ns;
end process clk_process;
end Behavioral;
